{
  "hash": "5335d1eb22702460679cffd21134022b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Unsupervised alignment\"\nauthor: \"Maël Delem\"\n# code\ncode-fold: false\ncode-annotations: hover\nwarning: false\nerror: false\nmessage: false\n---\n\n\n\n\n::: {.callout-note collapse=\"true\"}\n# Packages and setup\n\nDown below is the code to load necessary packages used for the simulation and analysis, along with some setups for the whole document (*hover over the numbers on the far right for additional explanation of code and mechanics*).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#| output: false\n#| echo: true\n\n# ═══ Packages ═════════════════════════════════════════════════════════════════\n\nif (!require(librarian)) install.packages(librarian) # <1>\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLe chargement a nécessité le package : librarian\n```\n\n\n:::\n\n```{.r .cell-code}\n#| output: false\n#| echo: true\n\nlibrary(librarian) # <1>\n\n# now putting packages on our library's shelves:\nshelf(\n  # ─── data management ─────────────────\n  holodeck,       # simulating multivariate data\n  cluster,        # dissimilarity matrices\n  \n  # ─── modelling ───────────────────────\n  mclust,         # mixture clustering\n  \n  #  data visualization ──────────────\n  # palettes\n  viridis,        # colour-blind friendly palettes\n  # interactive\n  plotly,         # interactive plots\n  ggdendro,       # dendrograms\n  seriation,      # dissimilarity plots\n  webshot2,       # HTML screenshots for Word render\n  webshot,\n  \n  # ─── essential package collections ───\n  doParallel,     # parallel execution\n  easystats,      # data analysis ecosystem\n  reticulate,     # R to Python                  # <2>\n  tidyverse,      # modern R ecosystem\n)\n\n# ─── Global cosmetic theme ───\ntheme_set(theme_modern(base_size = 14))\n\npal_okabe_ito <- c(                                                        # <3>\n  \"#E69F00\", \"#56B4E9\", \"#009E73\",                            \n  \"#F5C710\", \"#0072B2\", \"#D55E00\", \"#CC79A7\", \"#6c0009\")      \n\n# We'll need 9 colors at some point\npal_okabe_ito_extended <- c(                                 \n  \"#E69F00\", \"#56B4E9\", \"#009E73\",                           \n  \"#F5C710\", \"#0072B2\", \"#D55E00\", \"#CC79A7\", \"#6c0009\", \"#414487FF\")\n\n# We'll need 30 colors at another moment\ncool_30_colors <- c(                                                   \n  \"#3d51b4\", \"#414487FF\", \"#003d73\", \"#440154FF\", \"#6c0009\", \"#b64e4e\",\n  \"#D55E00\", \"#E69F00\", \"#F5C710\", \"#FDE725FF\", \"#f2bb7b\", \"#f1afad\", \"#CC79A7\", \n  \"#e57774\", \"#7AD151FF\", \"#57b571\", \"#318a4a\", \"#009E73\", \"#22A884FF\", \n  \"#2A788EFF\", \"#0072B2\", \"#2da6b5\", \"#56B4E9\", \"#889be0\", \"#6677e0\",   \n  \"#3d51b4\", \"#414487FF\", \"#003d73\", \"#440154FF\", \"#6c0009\", \"#b64e4e\"  \n  )                                                                        # <3>\n```\n:::\n\n\n\n1.  The package `librairian` eases package management with the \"shelf\" function, which automatically: (1) checks if a package is installed; (2) installs it if need be; (3) loads the package like the \"library()\" function would.\n2.  `reticulate` allows to translate and transfer objects and functions from R to Python and vice-versa, and was thus of primary importance for the successful use of the Python toolbox on our simulated data.\n3.  These are personal custom color palettes meant to extend my favourite palette, the color-atypical friendly Okabe-Ito color palette. The palette originally has only eight colors, but I will need nine, then up to 30 for later graphs, so I extended it with a hand-picked selection of mine.\n:::\n",
    "supporting": [
      "unsupervised-alignment_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}